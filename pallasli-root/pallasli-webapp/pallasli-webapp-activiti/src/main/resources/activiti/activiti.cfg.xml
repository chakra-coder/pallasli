<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd">
	<bean id="processEngineConfiguration"
		class="org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration">
		<property name="jdbcUrl" value="jdbc:h2:mem:activiti;DB_CLOSE_DELAY=1000" />
		<property name="jdbcDriver" value="org.h2.Driver" />
		<property name="jdbcUsername" value="sa" />
		<property name="jdbcPassword" value="" />
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="false" />
		<property name="mailServerHost" value="mail.my-corp.com" />
		<property name="mailServerPort" value="5025" />
		<property name="processEngineName" value="test"></property>
	</bean>

	<!-- 
		jdbcUrl: 数据库的JDBC URL。
		jdbcDriver: 对应不同数据库类型的驱动。
		jdbcUsername: 连接数据库的用户名。
		jdbcPassword: 连接数据库的密码。
		基于JDBC参数配置的数据库连接 会使用默认的MyBatis连接池。 下面的参数可以用来配置连接池（来自MyBatis参数）：
		jdbcMaxActiveConnections: 连接池中处于被使用状态的连接的最大值。默认为10。
		jdbcMaxIdleConnections: 连接池中处于空闲状态的连接的最大值。
		jdbcMaxCheckoutTime: 连接被取出使用的最长时间，超过时间会被强制回收。 默认为20000（20秒）。
		jdbcMaxWaitTime: 这是一个底层配置，让连接池可以在长时间无法获得连接时， 打印一条日志，并重新尝试获取
		一个连接。（避免因为错误配置导致沉默的操作失败）。 默认为20000（20秒）。
		
		无论你使用JDBC还是DataSource的方式，都可以设置下面的配置：
		databaseType: 一般不用设置，因为可以自动通过数据库连接的元数据获取。 只有自动检测失败时才需要设置。
		可能的值有：{h2, mysql, oracle, postgres, mssql, db2}。 如果没使用默认的H2数据库就必须设置这项。 这个
		配置会决定使用哪些创建/删除脚本和查询语句。 参考支持数据库章节 了解支持哪些类型。
		databaseSchemaUpdate: 设置流程引擎启动和关闭时如何处理数据库表。
		false（默认）：检查数据库表的版本和依赖库的版本， 如果版本不匹配就抛出异常。
		true: 构建流程引擎时，执行检查，如果需要就执行更新。 如果表不存在，就创建。
		create-drop: 构建流程引擎时创建数据库表， 关闭流程引擎时删除这些表。
		
		
		h2 jdbc:h2:tcp://localhost/activiti 默认配置的数据库
		mysql jdbc:mysql://localhost:3306/activiti?autoReconnect=true 使用mysql-connector-java驱动测试
		oracle jdbc:oracle:thin:@localhost:1521:xe
		postgres jdbc:postgresql://localhost:5432/activiti
		db2 jdbc:db2://localhost:50000/activiti
		mssql jdbc:sqlserver://localhost:1433/activiti
	-->
	<!-- 也可以使用javax.sql.DataSource。 （比如，Apache Commons的DBCP）
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" > 
			<property name="driverClassName" value="com.mysql.jdbc.Driver" /> 
			<property name="url" value="jdbc:mysql://localhost:3306/activiti" /> 
			<property name="username" value="activiti" /> 
			<property name="password" value="activiti" /> 
			<property name="defaultAutoCommit" value="false" /> 
		</bean> 
		<bean id="processEngineConfiguration" 
			class="org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration"> 
			<property name="dataSource" ref="dataSource" /> 
			... 
		</bean>
	 -->
	 
	 
</beans>