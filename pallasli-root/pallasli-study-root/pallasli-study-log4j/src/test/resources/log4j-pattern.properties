#模式转换
#c	用于输出的记录事件的类别。例如，对于类别名称"a.b.c" 模式  %c{2} 会输出 "b.c"
#C	用于输出呼叫者发出日志请求的完全限定类名。例如，对于类名 "org.apache.xyz.SomeClass", 模式 %C{1} 会输出 "SomeClass".
#d	用于输出的记录事件的日期。例如， %d{HH:mm:ss,SSS} 或 %d{dd MMM yyyy HH:mm:ss,SSS}.
#F	用于输出被发出日志记录请求，其中的文件名
#l	用于将产生的日志事件调用者输出位置信息
#L	用于输出从被发出日志记录请求的行号
#m	用于输出使用日志事件相关联的应用程序提供的消息
#M	用于输出发出日志请求所在的方法名称
#n	输出平台相关的行分隔符或文字
#p	用于输出的记录事件的优先级
#r	用于输出毫秒从布局的结构经过直到创建日志记录事件的数目
#t	用于输出生成的日志记录事件的线程的名称
#x	用于与产生该日志事件的线程相关联输出的NDC（嵌套诊断上下文）
#X	在X转换字符后面是键为的MDC。例如  X{clientIP} 将打印存储在MDC对键clientIP的信息
#%	文字百分号 %%将打印％标志

#格式修饰
#%20c	false	20	none	用空格左垫，如果类别名称少于20个字符长
#%-20c	true	20	none	用空格右垫，如果类别名称少于20个字符长
#%.30c	NA	none	30	从开始截断，如果类别名称超过30个字符长
#%20.30c	false	20	30	用空格左侧垫，如果类别名称短于20个字符。但是，如果类别名称长度超过30个字符，那么从开始截断。
#%-20.30c	true	20	30	用空格右侧垫，如果类别名称短于20个字符。但是，如果类别名称长度超过30个字符，那么从开始截断。

# Define the root logger with appender file
log = log
log4j.rootLogger = DEBUG, FILE

# Define the file appender
log4j.appender.FILE=org.apache.log4j.FileAppender
log4j.appender.FILE.File=${log}/log.out

# Define the layout for file appender
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=%d{yyyy-MM-dd}-%t-%x-%-5p-%-10c:%m%n

