￼￼使用Maven构建Dubbo服务的可执行jar包
Dubbo服务的运行方式: 1、使用Servlet容器运行(Tomcat、Jetty等)----不可取
 缺点:增加复杂性(端口、管理)
    浪费资源(内存)
2、自建Main方法类来运行(Spring容器) ----不建议(本地调试可用) 缺点: Dobbo本身提供的高级特性没用上
    自已编写启动类可能会有缺陷
3、使用Dubbo框架提供的Main方法类来运行(Spring容器)----建议使用 优点:框架本身提供(com.alibaba.dubbo.container.Main)
可实现优雅关机(ShutdownHook)
注意点:
spring-context.xml
<import resource="classpath:spring/spring-xxx.xml" />



下载最新版的Tomcat7:
$wget http://mirrors.hust.edu.cn/apache/tomcat/tomcat-7/v7.0.57/bin/apache-tomcat-7.0.57.tar.gz

解压：
$ tar -zxvf apache-tomcat-7.0.57.tar.gz
$ mv apache-tomcat-7.0.57 dubbo-admin-tomcat

移除/home/wusc/dubbo-admin-tomcat/webapps目录下的所有文件：
$ rm -rf *

上传Dubbo管理控制台程序dubbo-admin-2.5.3.war
到/home/wusc/dubbo-admin-tomcat/webapps

解压并把目录命名为ROOT:
$ unzip dubbo-admin-2.5.3.war -d ROOT
把dubbo-admin-2.5.3.war移到/home/wusc/tools目录备份
$ mv dubbo-admin-2.5.3.war /home/wusc/tools
配置dubbo.properties：
$ vi ROOT/WEB-INF/dubbo.properties
dubbo.registry.address=zookeeper://192.168.3.71:2181
dubbo.admin.root.password=wusc.123
dubbo.admin.guest.password=wusc.123
（以上密码在正式上生产前要修改）

防火墙开启8080端口，用root用户修改/etc/sysconfig/iptables，
# vi /etc/sysconfig/iptables
增加：
## dubbo-admin-tomcat:8080
-A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT
重启防火墙：
# service iptables restart
		
启动Tomat7
$ /home/wusc/dubbo-admin-tomcat/bin/startup.sh













￼￼在Linux操作系统上手工部署Dubbo服务
1、环境变量配置
2、部署目录规范 3、手工维护Dubbo服务 4、自定义Dubbo服务维护的Shell脚本 5、服务维护注意事项
￼￼在Linux操作系统上手工部署Dubbo服务
1、环境变量配置 Java环境变量----只需要JRE
vi /etc/profile
## java env
export JAVA_HOME=/usr/local/java/jdk1.7.0_72
export JRE_HOME=$JAVA_HOME/jre
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/li/tools.jar:$JRE_HOME/lib/rt.jar export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin
source /etc/profile
￼￼在Linux操作系统上手工部署Dubbo服务 2、部署目录规范
￼要避免应用迁移时的路径冲突
￼￼在Linux操作系统上手工部署Dubbo服务
3、手工维护Dubbo服务
java -jar edu-service-xxx.jar & kill PID
kill -9 PID
￼￼在Linux操作系统上手工部署Dubbo服务
4、自定义Dubbo服务维护的Shell脚本 脚本命名规范:
/home/wusc/edu/service/xxx/service-xxx.sh 例如:
/home/wusc/edu/service/user/service-user.sh
效果:
cd /home/wusc/edu/service/user . /service-user.sh start
. /service-user.sh stop
. /service-user.sh restart
￼￼在Linux操作系统上手工部署Dubbo服务
5、服务维护注意事项(结合自定义的Shell脚本)
(1) 脚本规范---------尽可能通用
(2) 守护进程
(3) 内存调优设置-----按需调整
(4) 日志处理---------只保留应用Log4j输出的日志 (5) 避免服务冲突 ----进程名、端口
(6) 避免进程误杀-----全匹配
脚本配置灵活高深,满足需求则可 可参考官方脚本样例












